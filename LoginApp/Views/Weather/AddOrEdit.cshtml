@model LoginApp.Models.Weathertest

@{
    ViewBag.Title = "Weather";
}

<h2>Wetter-Date Hinzufügen</h2>

<style>
    .desginn {
        color: blueviolet;
    }

    .label-success {
        background-color: green;
    }

    #itemText {
        color: blue;
    }
</style>
@using (Html.BeginForm("AddOrEdit", "Weather", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 id="itemText">Hochtief-AG</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.weather_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.weather_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.weather_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Temp_Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Temp_Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Temp_Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Temp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Temp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Temp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Temp_condition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Temp_condition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Temp_condition, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input value="Back" class="btn btn-info" onclick="location.href='@Url.Action("Index", "FirstLayout")'" />
                <input type="submit" value="Hinzufügen" class="btn btn-info" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <label class="label-success">@ViewBag.SuccessMessage</label>
            </div>
        </div>
    </div>
}